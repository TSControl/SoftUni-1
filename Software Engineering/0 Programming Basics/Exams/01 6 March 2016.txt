//01. Training Lab
import java.util.Scanner;

public class TrainingLab {
    public static void main(String[] args) {
        Scanner console = new Scanner(System.in);
        Double h = Double.parseDouble(console.nextLine());
        Double w = Double.parseDouble(console.nextLine());
        int hNum = (int) (h/1.2);
        int wNum = (int) ((w-1)/0.7);
        int total = hNum * wNum -3;
        System.out.println(total);
    }
}

//02. Transport Price
import java.util.Scanner;

public class TransportPrice {
    public static void main(String[] args) {
        Scanner console = new Scanner (System.in);
        int n = Integer.parseInt(console.nextLine());
        String time = console.nextLine();
        if (n<20) {
            if ("day".equals(time)) {
                System.out.println(0.7 + 0.79 * n);
            } else {
                System.out.println(0.7 + 0.9 * n);
            }
        } else if (n>=20 && n<100) {
                System.out.println(0.09*n);
            } else {
                System.out.println(0.06*n);
            }
        }
    }
	
//03. On Time for the Exam
using System;
class Program
{
    static void Main(string[] args)
    {
        var examHour = int.Parse(Console.ReadLine());
        var examMinutes = int.Parse(Console.ReadLine());
        var arrivalHour = int.Parse(Console.ReadLine());
        var arrivalMinutes = int.Parse(Console.ReadLine());
        var examDate = DateTime.Parse($"{examHour}:{examMinutes}");
        var arrivalDate = DateTime.Parse($"{examHour}:{examMinutes}");
        var minutesDifference = arrivalMinutes - examMinutes;
        var hourDifference = arrivalHour - examHour;
        var totalMinutesDiff = hourDifference * 60 + minutesDifference;

        if (totalMinutesDiff == 0)
        {
            Console.WriteLine("On time");
            return;
        } else if (totalMinutesDiff > 0)
        {
            Console.WriteLine("Late");
            if ( totalMinutesDiff < 60)
                Console.WriteLine($"{totalMinutesDiff} minutes after the start");
            else if (totalMinutesDiff >= 60)
            {
                var hours = totalMinutesDiff / 60;
                var minutes = totalMinutesDiff - hours * 60;
                Console.WriteLine($"{hours}:{minutes:D2} hours after the start");
            }
        }
        else if (totalMinutesDiff >= -30 && totalMinutesDiff < 0)
        {
            Console.WriteLine("On time");

        } 
        else if (totalMinutesDiff < -30)
        {
            Console.WriteLine("Early");

        }

        if (totalMinutesDiff > -60 && totalMinutesDiff < 0)
            Console.WriteLine($"{-totalMinutesDiff} minutes before the start");
        else if (totalMinutesDiff <= -60)
        {
            var hours = -totalMinutesDiff / 60;
            var minutes = -totalMinutesDiff - hours * 60;
            Console.WriteLine($"{hours}:{minutes:D2} hours before the start");
        }
    }
}

//04. Histogram
import java.util.Scanner;

public class Histogram {
    public static void main(String[] args) {
        Scanner console = new Scanner(System.in);
        int n = Integer.parseInt(console.nextLine());
        int p1=0;
        int p2=0;
        int p3=0;
        int p4=0;
        int p5=0;
        for (int i = 1; i < n+1; i++) {
            int num = Integer.parseInt(console.nextLine());
            if (num<200) {
                p1+=1;
            } else if (num>=200 && num <=399) {
                p2+=1;
            } else if (num>=400 && num <=599){
                p3+=1;
            } else if (num>=600 && num<=799) {
                p4+=1;
            } else {
                p5+=1;
            }
        }
        int p = p1+p2+p3+p4+p5;
        System.out.printf("%.2f%%%n%.2f%%%n%.2f%%%n%.2f%%%n%.2f%%%n",(double)p1*100/p,(double)p2*100/p,(double)p3*100/p,(double)p4*100/p,(double)p5*100/p);
    }
}

//05. Draw Fort
import com.sun.org.apache.xpath.internal.SourceTree;

        import java.util.Scanner;

public class DrawFort {
    public static void main(String[] args) {
        Scanner console = new Scanner(System.in);
        int n = Integer.parseInt(console.nextLine());
        int half = n / 2;
        int topDashCount=2*n-4-2*half;
        String roof = repeatStr("^", half);
        String midDashes = repeatStr("_", topDashCount);
        String botDashes = repeatStr("_", half);
        String midSpaces = repeatStr(" ", 2 * n - 2);
        String botTopSpaces = repeatStr(" ", half);
        String botLowerSpaces = repeatStr(" ", topDashCount);
        System.out.printf("/%s\\%s/%s\\%n", roof, midDashes, roof);
        if (n<5) {
            for (int i = 0; i <n-2; i++) {
                System.out.printf("|%s|%n", midSpaces);
            }
            System.out.printf("\\%s/\\%s/%n",botDashes,botDashes);
        } else {
            for (int i = 0; i <n-3; i++) {
                System.out.printf("|%s|%n", midSpaces);
        }
            System.out.printf("|%s %s %s|%n",botTopSpaces,midDashes,botTopSpaces);
            System.out.printf("\\%s/%s\\%s/%n",botDashes, botLowerSpaces, botDashes);

        }
    }
    static String repeatStr(String strToRepeat, int count) {
        String text = "";
        for (int i = 0; i < count; i++) {
            text += strToRepeat;
        }
        return text;
    }
}

//06. Stupid Password Generator
import java.util.Scanner;

public class StupidPasswordGenerator {
    public static void main(String[] args) {
        Scanner console = new Scanner(System.in);
        int n = Integer.parseInt(console.nextLine());
        int l = Integer.parseInt(console.nextLine());
        for (int i = 1; i <=n ; i++) {
            for (int j = 1; j <=n ; j++) {
                for (char k = 'a'; k <='a'+l-1 ; k++) {
                    for (char m = 'a'; m <='a'+l-1 ; m++) {
                        for (int o = 1; o <=n ; o++) {
                            if (o>i && o>j) {
                                System.out.printf("%d%d%s%s%d ",i,j,k,m,o);
                            }
                        }
                    }
                }
            }
        }
    }
}